---
interface Props {
  id: string;
  title: string;
  description: string;
  type?: "warning" | "error"; // Optional, defaults to 'warning'
  cta?: string; // Button label
  url?: string; // Button link
}

const { title, description, type = "warning", cta, url, id } = Astro.props;

const bgClass =
  type === "error"
    ? "bg-red-600 text-red-50 border-red-700 dark:bg-red-700 dark:text-red-100 dark:border-red-800"
    : "bg-amber-500 text-amber-50 border-amber-600 dark:bg-amber-600 dark:text-amber-100 dark:border-amber-700";

const iconClass =
  type === "error"
    ? "text-red-100 dark:text-red-200"
    : "text-amber-100 dark:text-amber-200";
---

<div
  id=`${id}`
  class={`w-full border-l-4 px-5 py-4 shadow-md ${bgClass} flex flex-col md:flex-row md:items-start justify-between gap-5`}
>
  <div class="flex gap-3">
    <div class={`text-xl mt-0.5 ${iconClass}`}>
      {
        type === "error" ? (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <circle cx="12" cy="12" r="10" />
            <line x1="12" y1="8" x2="12" y2="12" />
            <line x1="12" y1="16" x2="12.01" y2="16" />
          </svg>
        ) : (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z" />
            <line x1="12" y1="9" x2="12" y2="13" />
            <line x1="12" y1="17" x2="12.01" y2="17" />
          </svg>
        )
      }
    </div>
    <div>
      <h2 class="text-lg font-semibold leading-tight">{title}</h2>
      <p class="text-sm mt-1.5 leading-relaxed opacity-90">{description}</p>
    </div>
  </div>

  {
    cta && url && (
      <div class="md:ml-auto md:mt-1 w-full md:w-auto flex justify-end">
        <a
          href={url}
          target="_blank"
          class="shrink-0 bg-white/20 hover:bg-white/30 text-white text-sm font-medium px-4 py-2 rounded-md transition"
        >
          {cta}
        </a>
      </div>
    )
  }
</div>

---
interface Props {
  id: string;
  title: string;
  description: string;
  type?: "warning" | "error" | "info" | "announcement" | "success"; // Added 'success'
  cta?: string;
  url?: string;
  newPage?: boolean;
}

const {
  title,
  description,
  type = "warning",
  cta,
  url,
  id,
  newPage,
} = Astro.props;

// Expanded color system
const colorMap = {
  warning: {
    bg: "bg-amber-500 text-amber-50 border-amber-600",
    icon: "text-amber-100",
    button: "bg-white/20 hover:bg-white/30",
  },
  error: {
    bg: "bg-red-600 text-red-50 border-red-700",
    icon: "text-red-100",
    button: "bg-white/20 hover:bg-white/30",
  },
  info: {
    bg: "bg-blue-500 text-blue-50 border-blue-600",
    icon: "text-blue-100",
    button: "bg-white/20 hover:bg-white/30",
  },
  announcement: {
    bg: "bg-purple-600 text-purple-50 border-purple-700",
    icon: "text-purple-100",
    button: "bg-white/20 hover:bg-white/30",
  },
  success: {
    bg: "bg-green-600 text-green-50 border-green-700",
    icon: "text-green-100",
    button: "bg-white/20 hover:bg-white/30",
  },
};

const colors = colorMap[type];
---

<div
  id={id}
  class={`w-full border-l-4 px-5 py-4 shadow-md ${colors.bg} flex flex-col md:flex-row md:items-start justify-between gap-5`}
>
  <div class="flex gap-3">
    <div class={`text-xl mt-0.5 ${colors.icon}`}>
      {
        type === "error" ? (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <circle cx="12" cy="12" r="10" />
            <line x1="12" y1="8" x2="12" y2="12" />
            <line x1="12" y1="16" x2="12.01" y2="16" />
          </svg>
        ) : type === "success" ? (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14" />
            <path d="M22 4 12 14.01l-3-3" />
          </svg>
        ) : type === "info" ? (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <circle cx="12" cy="12" r="10" />
            <line x1="12" y1="16" x2="12" y2="12" />
            <line x1="12" y1="8" x2="12.01" y2="8" />
          </svg>
        ) : type === "announcement" ? (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z" />
            <path d="M12 8v4" />
            <path d="M12 16h.01" />
          </svg>
        ) : (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z" />
            <line x1="12" y1="9" x2="12" y2="13" />
            <line x1="12" y1="17" x2="12.01" y2="17" />
          </svg>
        )
      }
    </div>
    <div>
      <h2 class="text-lg font-semibold leading-tight">{title}</h2>
      <p class="text-sm mt-1.5 leading-relaxed opacity-90">{description}</p>
    </div>
  </div>

  {
    cta && url && (
      <div class="md:ml-auto md:mt-1 w-full md:w-auto flex justify-end">
        <a
          href={url}
          target={newPage ? "_blank" : undefined}
          class={`shrink-0 ${colors.button} text-white text-sm font-medium px-4 py-2 rounded-md transition`}
        >
          {cta}
        </a>
      </div>
    )
  }
</div>
